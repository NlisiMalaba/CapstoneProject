openapi: 3.0.0
info:
  title: Hypertension Prediction API
  description: REST API for predicting hypertension risk using machine learning and NLP
  version: 1.0.0
servers:
  - url: /api/v1
    description: API v1
paths:
  /auth/register:
    post:
      summary: Register new user
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: strongpassword123
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  id:
                    type: integer
                  message:
                    type: string
        '400':
          description: User already exists
  
  /auth/token:
    post:
      summary: Login and get access token
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: strongpassword123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: bearer
        '401':
          description: Invalid credentials
  
  /predictions/analyze:
    post:
      summary: Submit patient data for hypertension risk analysis
      tags:
        - predictions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - patient_id
                - vital_signs
              properties:
                patient_id:
                  type: string
                  example: "PAT123456"
                vital_signs:
                  type: object
                  properties:
                    systolic:
                      type: integer
                      example: 140
                    diastolic:
                      type: integer
                      example: 90
                    heart_rate:
                      type: integer
                      example: 75
                medical_history:
                  type: array
                  items:
                    type: string
                  example: ["diabetes", "obesity"]
                medications:
                  type: array
                  items:
                    type: string
                  example: ["lisinopril", "hydrochlorothiazide"]
                lifestyle_factors:
                  type: object
                  properties:
                    smoking:
                      type: boolean
                      example: false
                    alcohol_consumption:
                      type: string
                      enum: ["none", "light", "moderate", "heavy"]
                      example: "moderate"
                    exercise_frequency:
                      type: string
                      enum: ["none", "occasional", "regular", "frequent"]
                      example: "occasional"
      responses:
        '200':
          description: Successful analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  prediction_id:
                    type: string
                  risk_level:
                    type: string
                    enum: ["low", "moderate", "high", "severe"]
                  risk_percentage:
                    type: number
                    format: float
                    example: 68.5
                  contributing_factors:
                    type: array
                    items:
                      type: object
                      properties:
                        factor:
                          type: string
                        impact:
                          type: number
                          format: float
                  recommendations:
                    type: array
                    items:
                      type: string
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
  
  /predictions/{prediction_id}:
    get:
      summary: Get details of a specific prediction
      tags:
        - predictions
      security:
        - bearerAuth: []
      parameters:
        - name: prediction_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Prediction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  prediction_id:
                    type: string
                  patient_id:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
                  risk_level:
                    type: string
                  risk_percentage:
                    type: number
                  detailed_analysis:
                    type: object
        '404':
          description: Prediction not found
        '401':
          description: Unauthorized
  
  /patients:
    post:
      summary: Create a new patient record
      tags:
        - patients
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - date_of_birth
              properties:
                first_name:
                  type: string
                  example: "John"
                last_name:
                  type: string
                  example: "Doe"
                date_of_birth:
                  type: string
                  format: date
                  example: "1980-01-15"
                gender:
                  type: string
                  enum: ["male", "female", "other"]
                  example: "male"
                contact_information:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    phone:
                      type: string
      responses:
        '201':
          description: Patient created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid patient data
        '401':
          description: Unauthorized
  
  /patients/{patient_id}:
    get:
      summary: Get patient information
      tags:
        - patients
      security:
        - bearerAuth: []
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Patient information
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  gender:
                    type: string
                  medical_history:
                    type: array
                    items:
                      type: object
        '404':
          description: Patient not found
        '401':
          description: Unauthorized
    
    put:
      summary: Update patient information
      tags:
        - patients
      security:
        - bearerAuth: []
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                contact_information:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    phone:
                      type: string
      responses:
        '200':
          description: Patient updated successfully
        '400':
          description: Invalid patient data
        '404':
          description: Patient not found
        '401':
          description: Unauthorized
          
  /documents/upload:
    post:
      summary: Upload medical document for NLP analysis
      tags:
        - documents
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - patient_id
                - document
              properties:
                patient_id:
                  type: string
                document:
                  type: string
                  format: binary
                document_type:
                  type: string
                  enum: ["lab_report", "clinical_notes", "prescription", "other"]
                description:
                  type: string
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_id:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid document
        '401':
          description: Unauthorized
  
  /documents/{document_id}/analyze:
    post:
      summary: Run NLP analysis on uploaded document
      tags:
        - documents
      security:
        - bearerAuth: []
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Analysis results
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_id:
                    type: string
                  extracted_data:
                    type: object
                  identified_conditions:
                    type: array
                    items:
                      type: string
                  risk_indicators:
                    type: array
                    items:
                      type: object
                      properties:
                        indicator:
                          type: string
                        confidence:
                          type: number
                          format: float
        '404':
          description: Document not found
        '401':
          description: Unauthorized

  /user/profile:
    get:
      summary: Get current user profile
      tags:
        - user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
    
    put:
      summary: Update user profile
      tags:
        - user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Profile updated successfully
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT