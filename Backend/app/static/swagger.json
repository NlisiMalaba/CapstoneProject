{
    "swagger": "2.0",
    "info": {
      "title": "Hypertension Prediction API",
      "description": "API for predicting hypertension risk using machine learning and NLP",
      "version": "1.0.0"
    },
    "basePath": "/api",
    "schemes": ["http", "https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
      }
    },
    "paths": {
      "/auth/register": {
        "post": {
          "summary": "Register a new user",
          "description": "Create a new user account",
          "tags": ["Authentication"],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["user", "admin"],
                    "default": "user"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User registered successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "Login",
          "description": "Authenticate a user and return JWT tokens",
          "tags": ["Authentication"],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Login successful"
            },
            "401": {
              "description": "Invalid credentials"
            }
          }
        }
      },
      "/auth/refresh": {
        "post": {
          "summary": "Refresh token",
          "description": "Get a new access token using refresh token",
          "tags": ["Authentication"],
          "security": [
            {
              "Bearer": []
            }
          ],
          "responses": {
            "200": {
              "description": "New token generated"
            },
            "401": {
              "description": "Invalid or expired token"
            }
          }
        }
      },
      "/auth/me": {
        "get": {
          "summary": "Get current user",
          "description": "Get current authenticated user information",
          "tags": ["Authentication"],
          "security": [
            {
              "Bearer": []
            }
          ],
          "responses": {
            "200": {
              "description": "User information"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/prediction/patient-data": {
        "post": {
          "summary": "Save patient data",
          "description": "Save or update patient data for prediction",
          "tags": ["Prediction"],
          "security": [
            {
              "Bearer": []
            }
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["age", "gender"],
                "properties": {
                  "age": {
                    "type": "integer",
                    "example": 45
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["Male", "Female", "Other"],
                    "example": "Male"
                  },
                  "current_smoker": {
                    "type": "boolean",
                    "example": false
                  },
                  "cigs_per_day": {
                    "type": "integer",
                    "example": 0
                  },
                  "bp_meds": {
                    "type": "boolean",
                    "example": false
                  },
                  "diabetes": {
                    "type": "boolean",
                    "example": false
                  },
                  "total_chol": {
                    "type": "number",
                    "format": "float",
                    "example": 195.0
                  },
                  "sys_bp": {
                    "type": "number",
                    "format": "float",
                    "example": 130.0
                  },
                  "dia_bp": {
                    "type": "number",
                    "format": "float",
                    "example": 85.0
                  },
                  "bmi": {
                    "type": "number",
                    "format": "float",
                    "example": 27.5
                  },
                  "heart_rate": {
                    "type": "integer",
                    "example": 75
                  },
                  "glucose": {
                    "type": "number",
                    "format": "float",
                    "example": 98.0
                  },
                  "diet_description": {
                    "type": "string",
                    "example": "Low sodium diet with plenty of vegetables and fruits"
                  },
                  "medical_history": {
                    "type": "string",
                    "example": "No history of hypertension but family history of heart disease"
                  },
                  "physical_activity_level": {
                    "type": "string",
                    "enum": ["Low", "Moderate", "High"],
                    "example": "Moderate"
                  },
                  "kidney_disease": {
                    "type": "boolean",
                    "example": false
                  },
                  "heart_disease": {
                    "type": "boolean",
                    "example": false
                  },
                  "family_history_htn": {
                    "type": "boolean",
                    "example": true
                  },
                  "alcohol_consumption": {
                    "type": "string",
                    "enum": ["None", "Light", "Moderate", "Heavy"],
                    "example": "Light"
                  },
                  "salt_intake": {
                    "type": "string",
                    "enum": ["Low", "Moderate", "High"],
                    "example": "Moderate"
                  },
                  "stress_level": {
                    "type": "string",
                    "enum": ["Low", "Moderate", "High"],
                    "example": "Moderate"
                  },
                  "sleep_hours": {
                    "type": "number",
                    "format": "float",
                    "example": 7.5
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Patient data saved successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "get": {
          "summary": "Get patient data",
          "description": "Get patient data for the current user",
          "tags": ["Prediction"],
          "security": [
            {
              "Bearer": []
            }
          ],
          "responses": {
            "200": {
              "description": "Patient data retrieved successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "No patient data found"
            }
          }
        }
      },
      "/prediction/predict": {
        "post": {
          "summary": "Predict hypertension risk",
          "description": "Generate hypertension prediction for the current user",
          "tags": ["Prediction"],
          "security": [
            {
              "Bearer": []
            }
          ],
          "responses": {
            "200": {
              "description": "Prediction generated successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "prediction": {
                    "type": "object",
                    "properties": {
                      "prediction_score": {
                        "type": "integer",
                        "example": 65
                      },
                      "prediction_date": {
                        "type": "string",
                        "example": "2025-03-22 14:30:45"
                      },
                      "risk_level": {
                        "type": "string",
                        "example": "High"
                      },
                      "key_factors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Elevated systolic blood pressure", "Age", "Family history of hypertension"]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "No patient data found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/prediction/history": {
        "get": {
          "summary": "Get prediction history",
          "description": "Get prediction history for the current user",
          "tags": ["Prediction"],
          "security": [
            {
              "Bearer": []
            }
          ],
          "responses": {
            "200": {
              "description": "Prediction history retrieved successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "No prediction history found"
            }
          }
        }
      },
      "/api/medications": {
        "post": {
          "tags": [
            "Medications"
          ],
          "summary": "Add a new medication",
          "description": "Add a new medication for the user",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "dosage",
                  "frequency",
                  "time_of_day",
                  "start_date"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the medication"
                  },
                  "dosage": {
                    "type": "string",
                    "description": "Dosage information"
                  },
                  "frequency": {
                    "type": "string",
                    "description": "Frequency of taking medication"
                  },
                  "time_of_day": {
                    "type": "string",
                    "description": "JSON string of times to take medication"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date to start medication"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date to end medication (optional)"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes (optional)"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Medication created successfully"
            },
            "400": {
              "description": "Invalid request data"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "get": {
          "tags": [
            "Medications"
          ],
          "summary": "Get all medications",
          "description": "Get all medications for the authenticated user",
          "security": [
            {
              "JWT": []
            }
          ],
          "responses": {
            "200": {
              "description": "List of medications"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/medications/{medication_id}": {
        "get": {
          "tags": [
            "Medications"
          ],
          "summary": "Get medication details",
          "description": "Get details of a specific medication",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "medication_id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Medication details"
            },
            "404": {
              "description": "Medication not found"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "put": {
          "tags": [
            "Medications"
          ],
          "summary": "Update medication",
          "description": "Update a medication",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "medication_id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "dosage": {
                    "type": "string"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "time_of_day": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Medication updated successfully"
            },
            "400": {
              "description": "Invalid request data"
            },
            "404": {
              "description": "Medication not found"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "delete": {
          "tags": [
            "Medications"
          ],
          "summary": "Delete medication",
          "description": "Delete a medication",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "medication_id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Medication deleted successfully"
            },
            "404": {
              "description": "Medication not found"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/medications/{medication_id}/reminders": {
        "post": {
          "tags": [
            "Reminders"
          ],
          "summary": "Add medication reminder",
          "description": "Add a reminder for a medication",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "medication_id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "reminder_time",
                  "phone_number"
                ],
                "properties": {
                  "reminder_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time to send the reminder"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "Phone number to send SMS"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Reminder created successfully"
            },
            "400": {
              "description": "Invalid request data"
            },
            "404": {
              "description": "Medication not found"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "get": {
          "tags": [
            "Reminders"
          ],
          "summary": "Get medication reminders",
          "description": "Get all reminders for a medication",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "medication_id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "List of reminders"
            },
            "404": {
              "description": "Medication not found"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/medications/verify": {
        "post": {
          "tags": [
            "Medications"
          ],
          "summary": "Verify medication taken",
          "description": "Verify medication was taken using verification code",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "verification_code"
                ],
                "properties": {
                  "verification_code": {
                    "type": "string",
                    "description": "Verification code from SMS"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Optional notes about taking the medication"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Medication verified as taken"
            },
            "400": {
              "description": "Invalid verification code"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/medications/analytics": {
        "get": {
          "tags": [
            "Medications"
          ],
          "summary": "Get medication analytics",
          "description": "Get medication adherence analytics",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "type": "string",
              "format": "date",
              "required": false
            },
            {
              "name": "end_date",
              "in": "query",
              "type": "string",
              "format": "date",
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "Medication adherence analytics"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      }
    }
  }